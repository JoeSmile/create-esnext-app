{
  "private": true,
  "name": "{{ name }}",
  "version": "{{ version }}",
  "<Settings>": "------------------------------ Foundation Settings ------------------------------",
  "babel": {
    "presets": [
      "env",
      "jest",
      "react"
    ],
    "plugins": [
      "transform-class-properties",
      "transform-decorators-legacy",
      "transform-runtime",
      ["module-resolver", {
        "root": ["./src"],
        "alias": {
          "tests": "./tests"
        }
      }]
    ]
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    },
    "validate-commit-msg": {
      "types": [
        "feat",
        "fix",
        "docs",
        "style",
        "refactor",
        "perf",
        "test",
        "chore",
        "revert"
      ],
      "warnOnFail": false,
      "maxSubjectLength": 100,
      "subjectPattern": "^[A-Z]+-[0-9]+ - .*",
      "subjectPatternErrorMsg": "Subject must be in format 'CMS-123 - Commit message'",
      "helpMessage": ""
    }
  },
  "eslintConfig": {
    "root": true,
    "parser": "babel-eslint",
    "env": {
      "jest/globals": true
    },
    "extends": [
      "standard",
      "standard-react"
    ],
    "plugins": [
      "html",
      "jest"
    ]
  },
  "lint-staged": {
    "src/**/*.{js,jsx,css,less,scss}": [
      "prettier-standard",
      "git add"
    ]
  },
  "jest": {
    "collectCoverageFrom": [
      "!tests/bootstrap.js",
      "src/**/*.{js,jsx}"
    ],
    "setupTestFrameworkScriptFile": "<rootDir>/tests/bootstrap.js",
    "testMatch": [
      "<rootDir>/tests/**/?(*.)(spec|test).{js,jsx}"
    ]
  },
  "</Settings>": "------------------------ End of Foundation Settings ------------------------------",
  "scripts": {
    "precommit": "lint-staged",
    "prebuild": "npm run clean",
    "commit": "git-cz",
    "commitmsg": "validate-commit-msg",
    "build": "babel src -d build",
    "clean": "rimraf build",
    "lint": "eslint --ext .jsx,.js src tests",
    "start": "per-env",
    "start:development": "babel-node src/index.js",
    "prestart:production": "npm run build",
    "start:production": "node build/index.js",
    "test": "cross-env NODE_ENV=test TIMEOUT=10000 jest --forceExit"
  }
}
